# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SgNryM2NzyuUCl191rJ_K2wMN_GHnmQn
"""

# Import the Python SDK
import google.generativeai as genai
# Used to securely store your API key

GOOGLE_API_KEY='AIzaSyAhK0pgt0Vap64sX8tPOYLBAJF15qoCMMo'
genai.configure(api_key=GOOGLE_API_KEY)

for m in genai.list_models():
  if "generateContent" in m.supported_generation_methods:
    print(m.name)

generation_config = {
    "candidate_count": 1,
    "temperature": 0.5,
}

model = genai.GenerativeModel(model_name="gemini-1.0-pro")

chat = model.start_chat(history=[])

prompt = input("Aguardando prompt: ")

while prompt.lower() != "fim":
    response=chat.send_message(prompt)
    print("Resposta:", response.text, "\n")
    prompt = input("Aguardando prompt: ")

response = model.generate_content(input("oie"))
print(response.text)
response = model.generate_content(input("oie"))

while response == "continuar":
  response = model.generate_content(input("oie"))
  print(response.text)

prompt = input("Aguardando prompt: ")
chat = model.start_chat(history=[])
while prompt != "fim":
    response = chat.send_message(prompt)
    print("Resposta:", response.text, "\n")
    prompt = input("Aguardando prompt: ")

# Melhorando a visualização
# Código disponível em https://ai.google.dev/tutorials/python/quickstart#import_packages

import textwrap
from IPython.display import display
from IPython.display import Markdown

def to_markdown(text):
  """Formata o texto como Markdown com recuo."""
  text = text.replace('"', "'")
  return Markdown(textwrap.indent(text, '  > ', predicate=lambda _: True))

# Imprimindo o histórico
print("Imprimindo o histórico:")

for message in chat.history:
  display(to_markdown(f"**{message.role}:** {message.parts[0].text}"))
  print()
